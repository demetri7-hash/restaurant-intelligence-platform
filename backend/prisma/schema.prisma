// Restaurant Intelligence Platform Prisma Schema
// This should match the database schema we created in PostgreSQL

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id               String   @id @default(uuid()) @db.Uuid
  name             String   @db.VarChar(255)
  slug             String   @unique @db.VarChar(100)
  address          String?
  city             String?  @db.VarChar(100)
  state            String?  @db.VarChar(50)
  zipCode          String?  @map("zip_code") @db.VarChar(20)
  country          String?  @default("US") @db.VarChar(50)
  phone            String?  @db.VarChar(20)
  email            String?  @db.VarChar(255)
  website          String?  @db.VarChar(255)
  cuisineType      String?  @map("cuisine_type") @db.VarChar(100)
  posSystem        String?  @map("pos_system") @db.VarChar(50)
  posLocationId    String?  @map("pos_location_id") @db.VarChar(255)
  timezone         String?  @default("UTC") @db.VarChar(50)
  status           String   @default("active") @db.VarChar(20)
  subscriptionPlan String   @default("trial") @map("subscription_plan") @db.VarChar(50)
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  users            User[]
  menuCategories   MenuCategory[]
  menuItems        MenuItem[]
  customers        Customer[]
  transactions     Transaction[]
  dailyAnalytics   DailyAnalytic[]
  staff            Staff[]
  staffShifts      StaffShift[]
  inventoryItems   InventoryItem[]

  @@map("restaurants")
}

model User {
  id              String    @id @default(uuid()) @db.Uuid
  restaurantId    String    @map("restaurant_id") @db.Uuid
  email           String    @unique @db.VarChar(255)
  passwordHash    String?   @map("password_hash") @db.VarChar(255)
  firstName       String?   @map("first_name") @db.VarChar(100)
  lastName        String?   @map("last_name") @db.VarChar(100)
  role            String    @default("owner") @db.VarChar(50)
  phone           String?   @db.VarChar(20)
  oauthProvider   String?   @map("oauth_provider") @db.VarChar(50)
  oauthId         String?   @map("oauth_id") @db.VarChar(255)
  lastLogin       DateTime? @map("last_login") @db.Timestamptz(6)
  emailVerified   Boolean   @default(false) @map("email_verified")
  status          String    @default("active") @db.VarChar(20)
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  @@map("users")
}

model MenuCategory {
  id           String     @id @default(uuid()) @db.Uuid
  restaurantId String     @map("restaurant_id") @db.Uuid
  name         String     @db.VarChar(255)
  description  String?
  displayOrder Int        @default(0) @map("display_order")
  status       String     @default("active") @db.VarChar(20)
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  menuItems  MenuItem[]

  @@map("menu_categories")
}

model MenuItem {
  id                   String            @id @default(uuid()) @db.Uuid
  restaurantId         String            @map("restaurant_id") @db.Uuid
  categoryId           String?           @map("category_id") @db.Uuid
  posItemId            String?           @map("pos_item_id") @db.VarChar(255)
  name                 String            @db.VarChar(255)
  description          String?
  basePrice            Decimal           @map("base_price") @db.Decimal(10, 2)
  costPrice            Decimal?          @map("cost_price") @db.Decimal(10, 2)
  imageUrl             String?           @map("image_url") @db.VarChar(500)
  isAvailable          Boolean           @default(true) @map("is_available")
  prepTimeMinutes      Int               @default(0) @map("prep_time_minutes")
  calories             Int?
  dietaryRestrictions  String[]          @map("dietary_restrictions")
  ingredients          String[]
  status               String            @default("active") @db.VarChar(20)
  createdAt            DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant       Restaurant        @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  category         MenuCategory?     @relation(fields: [categoryId], references: [id])
  transactionItems TransactionItem[]

  @@unique([restaurantId, posItemId])
  @@map("menu_items")
}

model Customer {
  id               String        @id @default(uuid()) @db.Uuid
  restaurantId     String        @map("restaurant_id") @db.Uuid
  posCustomerId    String?       @map("pos_customer_id") @db.VarChar(255)
  phone            String?       @db.VarChar(20)
  email            String?       @db.VarChar(255)
  firstName        String?       @map("first_name") @db.VarChar(100)
  lastName         String?       @map("last_name") @db.VarChar(100)
  totalVisits      Int           @default(1) @map("total_visits")
  totalSpent       Decimal       @default(0.00) @map("total_spent") @db.Decimal(10, 2)
  averageTicket    Decimal       @default(0.00) @map("average_ticket") @db.Decimal(10, 2)
  lastVisit        DateTime?     @map("last_visit") @db.Timestamptz(6)
  preferredItems   String[]      @map("preferred_items")
  customerSegment  String?       @map("customer_segment") @db.VarChar(50)
  lifetimeValue    Decimal       @default(0.00) @map("lifetime_value") @db.Decimal(10, 2)
  createdAt        DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant   Restaurant    @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@unique([restaurantId, posCustomerId])
  @@map("customers")
}

model Transaction {
  id                String            @id @default(uuid()) @db.Uuid
  restaurantId      String            @map("restaurant_id") @db.Uuid
  customerId        String?           @map("customer_id") @db.Uuid
  posTransactionId  String            @unique @map("pos_transaction_id") @db.VarChar(255)
  transactionDate   DateTime          @map("transaction_date") @db.Timestamptz(6)
  subtotal          Decimal           @db.Decimal(10, 2)
  taxAmount         Decimal           @default(0.00) @map("tax_amount") @db.Decimal(10, 2)
  tipAmount         Decimal           @default(0.00) @map("tip_amount") @db.Decimal(10, 2)
  discountAmount    Decimal           @default(0.00) @map("discount_amount") @db.Decimal(10, 2)
  totalAmount       Decimal           @map("total_amount") @db.Decimal(10, 2)
  paymentMethod     String?           @map("payment_method") @db.VarChar(50)
  orderType         String?           @map("order_type") @db.VarChar(50)
  serverName        String?           @map("server_name") @db.VarChar(255)
  tableNumber       String?           @map("table_number") @db.VarChar(20)
  guestCount        Int               @default(1) @map("guest_count")
  posRawData        Json?             @map("pos_raw_data")
  createdAt         DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant       Restaurant        @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  customer         Customer?         @relation(fields: [customerId], references: [id])
  transactionItems TransactionItem[]

  @@map("transactions")
}

model TransactionItem {
  id           String     @id @default(uuid()) @db.Uuid
  transactionId String    @map("transaction_id") @db.Uuid
  menuItemId   String?    @map("menu_item_id") @db.Uuid
  posItemId    String?    @map("pos_item_id") @db.VarChar(255)
  itemName     String     @map("item_name") @db.VarChar(255)
  quantity     Int        @default(1)
  unitPrice    Decimal    @map("unit_price") @db.Decimal(10, 2)
  totalPrice   Decimal    @map("total_price") @db.Decimal(10, 2)
  modifications String[]
  costPrice    Decimal?   @map("cost_price") @db.Decimal(10, 2)
  profitMargin Decimal?   @map("profit_margin") @db.Decimal(10, 4)
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)

  // Relations
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  menuItem    MenuItem?   @relation(fields: [menuItemId], references: [id])

  @@map("transaction_items")
}

model DailyAnalytic {
  id                     String     @id @default(uuid()) @db.Uuid
  restaurantId           String     @map("restaurant_id") @db.Uuid
  analyticsDate          DateTime   @map("analytics_date") @db.Date
  totalRevenue           Decimal    @default(0.00) @map("total_revenue") @db.Decimal(10, 2)
  totalTransactions      Int        @default(0) @map("total_transactions")
  totalCustomers         Int        @default(0) @map("total_customers")
  averageTicket          Decimal    @default(0.00) @map("average_ticket") @db.Decimal(10, 2)
  totalItemsSold         Int        @default(0) @map("total_items_sold")
  laborCost              Decimal    @default(0.00) @map("labor_cost") @db.Decimal(10, 2)
  foodCost               Decimal    @default(0.00) @map("food_cost") @db.Decimal(10, 2)
  grossProfit            Decimal    @default(0.00) @map("gross_profit") @db.Decimal(10, 2)
  profitMargin           Decimal    @default(0.00) @map("profit_margin") @db.Decimal(10, 4)
  weatherCondition       String?    @map("weather_condition") @db.VarChar(100)
  temperatureFahrenheit  Int?       @map("temperature_fahrenheit")
  peakHour               Int?       @map("peak_hour")
  createdAt              DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt              DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  @@unique([restaurantId, analyticsDate])
  @@map("daily_analytics")
}

model Staff {
  id             String       @id @default(uuid()) @db.Uuid
  restaurantId   String       @map("restaurant_id") @db.Uuid
  posEmployeeId  String?      @map("pos_employee_id") @db.VarChar(255)
  firstName      String       @map("first_name") @db.VarChar(100)
  lastName       String       @map("last_name") @db.VarChar(100)
  role           String?      @db.VarChar(50)
  hourlyWage     Decimal?     @map("hourly_wage") @db.Decimal(8, 2)
  hireDate       DateTime?    @map("hire_date") @db.Date
  status         String       @default("active") @db.VarChar(20)
  createdAt      DateTime     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant  Restaurant   @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  staffShifts StaffShift[]

  @@map("staff")
}

model StaffShift {
  id          String    @id @default(uuid()) @db.Uuid
  staffId     String    @map("staff_id") @db.Uuid
  restaurantId String   @map("restaurant_id") @db.Uuid
  shiftDate   DateTime  @map("shift_date") @db.Date
  startTime   DateTime  @map("start_time") @db.Timestamptz(6)
  endTime     DateTime? @map("end_time") @db.Timestamptz(6)
  hoursWorked Decimal?  @map("hours_worked") @db.Decimal(5, 2)
  hourlyRate  Decimal?  @map("hourly_rate") @db.Decimal(8, 2)
  totalPay    Decimal?  @map("total_pay") @db.Decimal(10, 2)
  totalSales  Decimal   @default(0.00) @map("total_sales") @db.Decimal(10, 2)
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  staff      Staff      @relation(fields: [staffId], references: [id], onDelete: Cascade)
  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  @@map("staff_shifts")
}

model InventoryItem {
  id             String    @id @default(uuid()) @db.Uuid
  restaurantId   String    @map("restaurant_id") @db.Uuid
  name           String    @db.VarChar(255)
  category       String?   @db.VarChar(100)
  unitOfMeasure  String?   @map("unit_of_measure") @db.VarChar(50)
  unitCost       Decimal?  @map("unit_cost") @db.Decimal(8, 4)
  supplier       String?   @db.VarChar(255)
  parLevel       Int?      @map("par_level")
  currentStock   Decimal   @default(0) @map("current_stock") @db.Decimal(10, 2)
  lastOrdered    DateTime? @map("last_ordered") @db.Timestamptz(6)
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  @@map("inventory_items")
}
